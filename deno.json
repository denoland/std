{
  "compilerOptions": {
    "strict": true,
    "exactOptionalPropertyTypes": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true,
    "noUncheckedIndexedAccess": true
  },
  "importMap": "./import_map.json",
  "tasks": {
    "test": "deno test --unstable-http --unstable-webgpu --unstable-fs --allow-all --parallel --trace-leaks",
    "test:with-unsafe-proto": "deno test --unstable-http --unstable-webgpu --unstable-fs --unstable-unsafe-proto --doc --allow-all --parallel --coverage --trace-leaks --clean",
    "test:browser": "git grep --name-only \"This module is browser compatible.\" | grep -v deno.json | grep -v .github/workflows | grep -v _tools | grep -v encoding/README.md | grep -v media_types/vendor/update.ts | xargs deno check --config browser-compat.tsconfig.json",
    "test:node": "(cd _tools/node_test_runner && npm install) && node --import ./_tools/node_test_runner/register_deno_shim.mjs ./_tools/node_test_runner/run_test.mjs",
    "test:bun": "(cd _tools/node_test_runner && bun install) && cp _tools/node_test_runner/tsconfig_for_bun.json ./tsconfig.json && bun test --require ./_tools/node_test_runner/register_deno_shim.mjs _tools/node_test_runner/run_test.mjs && rm tsconfig.json",
    "fmt:licence-headers": "deno run --allow-read --allow-write ./_tools/check_licence.ts",
    "lint:circular": "deno run --allow-env --allow-read --allow-write --allow-net=deno.land,jsr.io ./_tools/check_circular_package_dependencies.ts",
    "lint:mod-exports": "deno run --allow-env --allow-read ./_tools/check_mod_exports.ts",
    "lint:tools-types": "deno check _tools/*.ts",
    "lint:docs": "deno run -A _tools/check_docs.ts",
    "lint:import-map": "deno run -A _tools/check_import_map.ts",
    "lint:export-names": "deno run -A _tools/check_export_names.ts",
    "lint:unstable-deps": "deno run -A _tools/check_unstable_deps.ts",
    "lint": "deno lint && deno task fmt:licence-headers --check && deno task lint:circular && deno task lint:tools-types && deno task lint:mod-exports && deno task lint:import-map && deno task lint:export-names && deno task lint:docs && deno task lint:unstable-deps",
    "typos": "typos -c ./.github/workflows/typos.toml",
    "build:crypto": "deno task --cwd crypto/_wasm wasmbuild",
    "wasmbuild": "deno run -A jsr:@deno/wasmbuild@0.19.2 --js-ext mjs --inline",
    "cov:test": "deno task test --coverage --clean --reporter=dot && deno task cov:html",
    "cov": "deno coverage --ignore=\"**/*.generated.mjs,**/_test_utils.ts,.github\"",
    "cov:lcov": "deno task cov --lcov --output=cov.lcov",
    "cov:html": "deno task cov --html",
    "cov:mac": "deno task cov:test && open coverage/html/index.html",
    "cov:lin": "deno task cov:test && xdg-open coverage/html/index.html",
    "cov:win": "deno task cov:test && start coverage/html/index.html",
    "ok": "deno task lint && deno fmt --check && deno task test:browser && deno task test"
  },
  "exclude": [
    ".git",
    "jsonc/testdata",
    "_tools/node_test_runner"
  ],
  "lint": {
    "rules": {
      "tags": ["recommended", "jsr"],
      "include": [
        "camelcase",
        "no-sync-fn-in-async-fn",
        "single-var-declarator",
        "no-console"
      ]
    },
    "plugins": ["./_tools/lint_plugin.ts"]
  },
  "workspace": [
    "./assert",
    "./async",
    "./bytes",
    "./cache",
    "./cbor",
    "./cli",
    "./collections",
    "./crypto",
    "./csv",
    "./data_structures",
    "./datetime",
    "./dotenv",
    "./encoding",
    "./expect",
    "./fmt",
    "./front_matter",
    "./fs",
    "./html",
    "./http",
    "./ini",
    "./internal",
    "./io",
    "./json",
    "./jsonc",
    "./log",
    "./media_types",
    "./msgpack",
    "./net",
    "./path",
    "./random",
    "./regexp",
    "./semver",
    "./streams",
    "./tar",
    "./testing",
    "./text",
    "./toml",
    "./ulid",
    "./uuid",
    "./webgpu",
    "./yaml"
  ]
}
