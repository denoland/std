name: CI

on:
  push:
    branches: [main, next]
  pull_request:
    branches: [main]

jobs:
  ci:
    permissions:
      id-token: write
      # contents permission to update benchmark contents in gh-pages branch
      # without benchmarks, would only need read permission
      contents: write
      # deployments permission to deploy GitHub pages website
      deployments: write
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.json') }}

      - name: Check typos
        if: matrix.os == 'ubuntu-latest'
        uses: crate-ci/typos@master

      - name: Check formatting, linting, and types
        run: deno task check

      - name: Test
        run: deno task test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}


      - name: Create lcov file
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        run: deno task cov:gen

      - name: Upload coverage
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          name: ${{ matrix.os }}
          files: cov.lcov
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: dreamcatcher-tech/artifact

      - name: Run benchmark
        if: matrix.os == 'ubuntu-latest'
        run: deno task bench | tee output.txt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Store benchmark result
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Artifact Benchmarks
          tool: 'benchmarkjs'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true

