{
  "name": "@artifact/files",
  "version": "0.0.1",
  "napp-format": "v1",
  "description": "filesystem access using the artifact api",
  "runtime": "deno",
  "branding": "./avatar.jpg",
  "agent": {
    // entry point that takes plain text in and returns text plus files
    "napp": "@artifact/openai",
    "parameters": {
      "model": "gpt-4o",
      "parallel_tool_calls": false
      // content is the reserved name for the input text
    }
  },
  // the rule is that the default export must at least cover the declared tools
  "tools": {
    // use the main function from the stateboard napp
    "show": "@artifact/stateboard",
    "write": {
      "parameters": {
        "path": { "type": "string" },
        "content": { "type": "string" }
      },
      "returns": {
        "type": "object",
        "properties": { "charactersWritten": { "type": "number" } }
      }
    }
  },
  "evals": {
    "napp": "@artifact/eval-file-runner",
    "parameters": { "files": ["./files.eval.md"] }
  },
  "imports": {
    "@artifact/eval-file-runner": {
      "version": "0.0.1",
      "commit": "some-commit-hash"
    },
    "@artifact/stateboard": {
      "version": "0.0.1",
      "commit": "some-commit-hash"
    },
    "@artifact/openai": {
      "version": "0.0.1",
      "commit": "some-commit-hash"
    }
  },
  "graphics": {
    // the file explorer and the file viewer widgets should be shown here
    "googleMapsViewer": {
      "type": "react",
      "component": "./path/to/component",
      "parameters": {
        // mock react props that can be configured by the LLM
      }
    }
  }
}

//   ---
// commands:
//   - files:write
//   - files:ls
//   - files:read
//   - files:update
//   - files:rm
//   - files:mv
//   - files:search
//   - stateboard:show
// ---
